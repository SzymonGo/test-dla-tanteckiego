public without sharing class FacilityTriggerHandler extends TriggerHandler {

    public override void beforeInsert() {
        fillLookupFieldOnParentFacility((List<Facility__c>) Trigger.New);
    }

    private void fillLookupFieldOnParentFacility (List<Facility__c> facilities) {
        Id parentObjectRecordTypeId = Facility__c.SObjectType.getDescribe().getRecordTypeInfosByDeveloperName().get(Constants.FACILITY_PARENT_OBJECT).getRecordTypeId();
        for (Facility__c fac : facilities) {
            if (parentObjectRecordTypeId == fac.RecordTypeId) {
                fac.Company__c = fac.Company_Master__c;
            } else {
                fac.Company__c = null;
            }
        }
    }

	public static void main(string args..){
		salesforce.create
		salesforce.asdf
		salesforce.destroy
	}

    public override void beforeInsert() {
        fillLookupFieldOnParentFacility((List<Facility__c>) Trigger.New);
    }
    
    java.fuack
	
	private void fillLookupFieldOnParentFacility (List<Facility__c> facilities) {
        Id parentObjectRecordTypeId = Facility__c.SObjectType.getDescribe().getRecordTypeInfosByDeveloperName().get(Constants.FACILITY_PARENT_OBJECT).getRecordTypeId();
        for (Facility__c fac : facilities) {
            if (parentObjectRecordTypeId == fac.RecordTypeId) {
                fac.Company__c = fac.Company_Master__c;
            } else {
                fac.Company__c = null;
            }
        }
    }
}
